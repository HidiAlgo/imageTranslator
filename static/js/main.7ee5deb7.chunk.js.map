{"version":3,"sources":["screens/LoadingScreen.js","components/LanguageButton.js","components/SelectImage.js","screens/MainScreen.js","screens/PredictionScreen.js","screens/HomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingScreen","defaultOptions","loop","autoplay","animationData","loadingAnimation","rendererSettings","preserveAspectRatio","className","style","width","height","display","flexDirection","alignItems","justifyContent","options","color","margin","fontFamily","fontSize","LanguageButton","text","setPrediction","language","button","backgroundColor","padding","borderRadius","textAlign","fontWeight","boxShadow","onClick","id","onMouseEnter","e","document","getElementById","cursor","onMouseOut","SelectImage","imageForPreditions","inputImage","useRef","useState","image","setImage","info","setInfo","imageBackground","position","backgroundImage","filter","backgroundPosition","backgroundRepeat","backgroundSize","onButtonClick","current","click","handleFileUpload","files","target","URL","createObjectURL","dragOver","preventDefault","dragEnter","dragLeave","fileDrop","dataTransfer","indexOf","type","useEffect","overflow","borderStyle","onDragOver","onDragEnter","onDragLeave","onDrop","icon","faCamera","size","justifySelf","ref","accept","onChange","zIndex","src","maxWidth","maxHeight","styles","marginTop","imageSelected","setImageSelected","languageButtons","console","log","PredictionScreen","originalPredictions","translations","reset","tableTitle","translatedText","originalText","probabilityText","retryButton","boxSizing","probability","toFixed","HomeScreen","clickEvent","link","marginLeft","marginRight","marginBottom","faCodeBranch","faEnvelope","paddingLeft","paddingRight","App","model","setModel","predictions","setPredictions","setTranslations","enter","setEnter","loadModel","a","tf","mobilenet","tensorflowModel","predict","classify","prediction","getTranslation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ee5deb7.chunk.js","sourcesContent":["import React from 'react'\nimport Lottie from 'react-lottie';\nimport loadingAnimation from '../assets/loading.json';\n\nexport default function LoadingScreen(){\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: loadingAnimation,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n    const styles={\n        width: '100%', \n        height: '100vh', \n        display: 'flex', \n        flexDirection: 'column',\n        alignItems: 'center', \n        justifyContent: 'center'\n    }\n\n    const loadingText = {\n        color: \"white\",\n        margin: \"5px\",\n        fontFamily: \"monospace\",\n        fontSize: \"20px\"\n    }\n\n    return (\n    <div className=\"\" style={styles}>\n       <Lottie options={defaultOptions}\n              height={200}\n              width={200}/>\n        <p style={loadingText}>Loading...</p>      \n    </div>\n    );\n    \n}","import React from 'react'\n\nexport default function LanguageButton({text, color, setPrediction, language}){\n\n    const button ={\n        backgroundColor: color,\n        padding: \"10px\",\n        borderRadius: \"10px\",\n        textAlign: 'center',\n        fontSize: '3vh',\n        fontWeight: 'bold',\n        color: \"white\",\n        boxShadow: `2px 2px 10px black`\n    }\n\n    const buttonContainer = {\n\n    }\n\n    const mouseEnters = (e) => {\n        let button = document.getElementById(language);\n        button.style.boxShadow = \"inset 2px 2px 10px #16171d\";\n        button.style.cursor=\"pointer\";\n\n    }\n\n    const mouseLeaves = (e) => {\n        let button = document.getElementById(language);\n        button.style.boxShadow = \"none\";\n        button.style.backgroundColor = color;\n    }\n\n    return (\n        <div style={buttonContainer} onClick={() => {setPrediction(language)}}>\n            <div style={button} id={language}\n                onMouseEnter={mouseEnters}\n                onMouseOut={mouseLeaves}\n            >\n                {text}\n            </div>\n        </div>\n    );\n    \n}","import React, { useEffect, useRef, useState } from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCamera} from '@fortawesome/free-solid-svg-icons';\n\nexport default function SelectImage({imageForPreditions}){\n\n    const inputImage = useRef(null);\n    const[image, setImage] = useState(null);\n    const [info, setInfo] = useState(\"SELECT A PHOTO\")\n\n    const containerBefore = {\n        backgroundColor: \"#16171d\",\n        height: \"80vh\",\n        borderRadius: \"20px\",\n        padding: \"30px\",\n        overflow: \"hidden\"\n        \n    }\n\n    const containerAfter = {\n        height: \"80vh\",\n        borderRadius: \"20px\",\n        position: \"relative\",\n        overflow: \"hidden\"\n    }\n\n    const innerContainer = {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: \"100%\", height: \"100%\",\n        borderRadius: \"40px\",\n        borderStyle: \"dashed\"\n    }\n\n    const imageConainer = {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"hidden\",\n        zIndex: 2,\n        position: \"absolute\"\n    }\n\n    const imageStyle = {\n        maxWidth: \"100%\",\n        maxHeight: \"100%\",\n        filter: \"drop-shadow(8px 8px 20px gray)\"\n    }\n\n    const imageBackground = {\n        width: \"100%\",\n        height: \"100%\",\n        position: 'absolute',\n        backgroundImage: `url(${image})`,\n        filter: 'blur(8px)',\n\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        \n    }\n    const text = {\n        justifySelf: 'flex-start', \n        fontFamily: 'monospace'\n    }\n\n    const onButtonClick = () => {\n       inputImage.current.click();\n    };\n\n    const handleFileUpload = e => {\n        const { files } = e.target;\n        setImage(URL.createObjectURL(files[0]));\n    };\n\n\n    const dragOver = (e) => {\n        e.preventDefault();\n        if (e.target.id === \"image-container\"){\n            let imageContainer = document.getElementById(\"image-container\");\n            imageContainer.style.backgroundColor = \"#1d1f26\";\n        }\n    }\n    \n    const dragEnter = (e) => {\n        e.preventDefault();\n    }\n    \n    const dragLeave = (e) => {\n        e.preventDefault();\n        if (e.target.id === \"image-container\"){\n            let imageContainer = document.getElementById(\"image-container\");\n            imageContainer.style.backgroundColor = \"#16171d\";\n        }\n    }\n    \n    const fileDrop = (e) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n\n        if (validTypes.indexOf(files[0].type) !== -1) {\n            setImage(URL.createObjectURL(files[0]));\n        }else{\n            setInfo(\"INVALID FILE TYPE\");\n            let imageContainer = document.getElementById(\"image-container\");\n            imageContainer.style.backgroundColor = \"#16171d\";\n        }\n    }\n\n\n\n    useEffect(() => {\n        if (image !== null) imageForPreditions(document.getElementById(\"image\"))\n    }, [image])\n\n    return (\n        <div className=\"\" style={image ? containerAfter : containerBefore}>\n            {image && \n                <div style={imageBackground}></div>\n            }\n            {!image && \n                <div id=\"image-container\"\n                style={innerContainer} onClick={onButtonClick}\n                onDragOver={dragOver}\n                onDragEnter={dragEnter}\n                onDragLeave={dragLeave}\n                onDrop={fileDrop}\n                id=\"image-container\"\n                >\n                    <FontAwesomeIcon icon={faCamera} size=\"6x\"/>\n\n                    <p style={text}>{info}</p>\n\n                    <input type='file' \n                        id='file' \n                        ref={inputImage} \n                        style={{display: 'none'}} \n                        accept=\"image/*\"\n                        onChange={handleFileUpload}/>\n                </div>\n            }\n            {image &&\n                <div style={imageConainer} onClick={onButtonClick}\n                onDragOver={dragOver}\n                onDragEnter={dragEnter}\n                onDragLeave={dragLeave}\n                onDrop={fileDrop}\n                >\n                    <img src={image} style = {imageStyle} id=\"image\"/>\n\n                    <input type='file' \n                        id='file' \n                        ref={inputImage} \n                        style={{display: 'none'}} \n                        accept=\"image/*\"\n                        onChange={handleFileUpload}/>\n\n                </div>\n            }\n        </div>\n    );\n    \n}","import React, { useState } from 'react'\nimport LanguageButton from '../components/LanguageButton'\nimport SelectImage from '../components/SelectImage'\n\n\nconst styles={\n    marginTop: \"5%\"\n  }\n\nexport default function LoadingScreen({imageForPreditions, setPrediction}){\n\n    const [imageSelected, setImageSelected] = useState(false)\n\n    const languageButtons = {\n        padding: \"25px\"\n    }\n\n    const noticeText = {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontFamily: \"monospace\",\n        color: 'gray',\n        marginTop: \"15px\"\n    }\n\n    const imageChoosen = (image) => {\n        console.log(\"IMAGE CHOOSEN\")\n        imageForPreditions(image);\n        setImageSelected(true);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\" style={styles}>\n                <div className=\"col-12\">\n                    <SelectImage imageForPreditions={imageChoosen}/>\n                </div>\n                <div className=\"col-12\">\n                {imageSelected && \n                    <div className=\"row\">\n                        <div className=\"col-6\" style={languageButtons}>\n                            <LanguageButton text=\"සිංහල\" color=\"#4d5976\" setPrediction={setPrediction} language=\"si\"/>\n                        </div>\n                        <div className=\"col-6\" style={languageButtons}>\n                            <LanguageButton text=\"தமிழ்\" color=\"#5f7936\" setPrediction={setPrediction} language=\"ta\"/>\n                        </div>\n                    </div>\n                }{!imageSelected &&\n                \n                    <div style={noticeText}>\n                        BROWSE OR DRAG AND DROP AN IMAGE\n                    </div>\n\n                }\n                </div>\n            </div>\n        </div>\n    );\n    \n}","import React from 'react'\n\nexport default function PredictionScreen({originalPredictions, translations, reset}){\n\n    const tableStyle = {\n        width: '100%',\n        padding: \"30px\"\n    }\n\n    const container = {\n        boxSizing: 'border-box',\n        padding: '50px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        height: \"100vh\"\n    }\n\n    const tableTitle = {\n        fontFamily: \"monospace\",\n        fontSize: \"15px\",\n        color: \"#478DFF\",\n        textAlign: 'start'\n    }\n    \n    const translatedText = {\n        fontWeight: 'bold',\n        margin: 0,\n        fontSize: '25px',\n        color: 'white'\n    }\n\n    const originalText = {\n        color: \"gray\",\n        fontFamily: 'monospace',\n        fontSize: \"20px\",\n    }   \n\n    const probabilityText = {\n        fontWeight: \"bold\",\n        fontSize: \"30px\",\n        textAlign: 'center',\n        color: \"#D4786C\"\n    }\n\n    const retryButton = {\n        width: \"100%\",\n        backgroundColor: \"green\",\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        padding: \"10px\",\n        borderRadius: \"10px\",\n        fontFamily: \"monospace\",\n        fontSize: \"20px\",\n        color: \"white\",\n        fontWeight: 'bold',\n        fontFamily: 'monospace'\n\n    }\n\n    const mouseEnters = (e) => {\n        let button = document.getElementById(\"retry\");\n        button.style.boxShadow = \"inset 2px 2px 10px #16171d\";\n        button.style.cursor=\"pointer\";\n\n    }\n\n    const mouseLeaves = (e) => {\n        let button = document.getElementById(\"retry\");\n        button.style.boxShadow = \"none\";\n        button.style.backgroundColor = \"green\";\n    }\n\n\n\n    return (\n        <div style={container}>\n            <div className=\"col-md-3\"></div>\n            <div className=\"col-md-6\">\n                <table style={tableStyle}>\n                    <thead>\n                        <tr>\n                            <th style={tableTitle}>PREDICTION</th>\n                            <th style={tableTitle}>PROBABILITY</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <p style={translatedText} >{translations[0]}</p>\n                                <p style={originalText}>{originalPredictions[0].className}</p>\n                            </td>\n                            <td style={probabilityText}>{(originalPredictions[0].probability.toFixed(2))*100}%</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p style={translatedText}>{translations[1]}</p>\n                                <p style={originalText}>{originalPredictions[1].className}</p>\n                            </td>\n                            <td style={probabilityText}>{(originalPredictions[1].probability.toFixed(2))*100}%</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p style={translatedText}>{translations[2]}</p>\n                                <p style={originalText}>{originalPredictions[2].className}</p>\n                            </td>\n                            <td style={probabilityText}>{(originalPredictions[2].probability.toFixed(2))*100}%</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div \n                    style={retryButton} \n                    onClick={() => reset(null)}\n                    onMouseEnter={mouseEnters}\n                    onMouseOut={mouseLeaves}\n                    id=\"retry\"\n                >\n                    RETRY\n                </div>\n            </div>\n            <div className=\"col-md-3\"></div>\n        </div>\n    );\n    \n}","import React from 'react'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faEnvelope, faCodeBranch} from '@fortawesome/free-solid-svg-icons';\n\nexport default function HomeScreen({clickEvent}){\n\n    const container = {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: \"100%\",\n        height: \"100vh\",\n        padding: \"30px\",\n        textAlign: 'justify',\n\n    }\n\n    const title = {\n        color: \"white\",\n        fontFamily: \"monospace\",\n        fontWeight: \"bold\",\n        margin: \"10px\",\n        marginLeft: 0,\n        marginRight: 0,\n        fontSize: \"35px\",\n        marginBottom: \"40px\",\n        \n    }\n\n    const text = {\n        color: \"white\",\n        fontFamily: \"sherif\"\n    }\n\n    const link = {\n        color: \"white\",\n        fontFamily: \"monospace\"\n    }\n\n    const button = {\n        backgroundColor: \"#832e71\",\n        color: \"white\",\n        padding: \"10px\",\n        paddingLeft: \"40px\",\n        paddingRight: \"40px\",\n        borderRadius: \"10px\"\n    }   \n\n    const textSection = {\n        textAlign: \"justify\"\n    }\n\n    const textContaienr ={\n        boxShadow: \"2px 2px 30px #832e71\",\n        padding: \"20px\",\n        borderRadius: \"10px\"\n    }\n\n    const mouseEnters = (e) => {\n        let button = document.getElementById(\"start\");\n        button.style.boxShadow = \"inset 2px 2px 10px #16171d\";\n        button.style.cursor=\"pointer\";\n\n    }\n\n    const mouseLeaves = (e) => {\n        let button = document.getElementById(\"start\");\n        button.style.boxShadow = \"none\";\n        button.style.backgroundColor = \"#832e71\";\n    }\n\n    return (\n        <div style={container}>\n            <div className=\"row\" >\n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6 text-center\" style={textContaienr}>\n                    <h1 style={title}>Hi there!!</h1>\n                    <div style={textSection}>\n                        <p style={text}>This is <b>IMAGE TRANSLATOR</b> which you can use to get translations for your images.\n                            With this application, you will be able to add an image of something and get the translated\n                            words for that something. For example, let's say you see a bird, but you do not know the type \n                            of that bird, in that case you can take a picture of that bird and use this web application to get \n                            the name of that bird with the desired languages. As of now, I have developed this applicatin only to\n                            use Sinhala or Tamil with English, but in future this will be updated to use almost any language. \n                        </p>\n                        <p style={text}>Hi I am Hashan the developer of this web application, this project is completely free you can get the source code for free.\n                            And contact me through my email if you have anything to say. :)\n                        </p>\n                    </div>\n                    <p style={link}>git/HidiAlgo/imageTranslator <FontAwesomeIcon icon={faCodeBranch} /> </p>\n                        <p style={link}>hashan.mahesh01@gmail.com <FontAwesomeIcon icon={faEnvelope} /></p>\n                    <div style={button} onClick={() => clickEvent(true)} id=\"start\" onMouseEnter={mouseEnters} onMouseOut={mouseLeaves}>\n                        Let's start\n                    </div>\n                </div>\n\n                <div className=\"col-md-3\"></div>\n            </div>\n\n        </div>\n    );\n}","import './App.css';\n\nimport {useState, useEffect} from 'react';\n\nimport * as mobilenet from '@tensorflow-models/mobilenet';\nimport * as tf from '@tensorflow/tfjs';\n\nimport LoadingScreen from './screens/LoadingScreen';\nimport MainScreen from './screens/MainScreen';\nimport PredictionScreen from './screens/PredictionScreen';\nimport HomeScreen from './screens/HomeScreen';\n\n\n\nfunction App() {\n\n  const [model, setModel] = useState(null);\n  const [image, setImage] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [translations, setTranslations] = useState(null)\n  const [enter, setEnter] = useState(false);\n\n  const loadModel = async () => {\n    await tf.ready()\n    const tensorflowModel = await mobilenet.load();\n    setModel(tensorflowModel);\n  }\n\n  useEffect(() => {\n    loadModel();\n  }, [])\n\n  const predict = async (language) => {\n    const prediction = await model.classify(image);\n    setPredictions(prediction);\n    getTranslation(language);\n  }\n\n  const getTranslation = (language) => {\n    if(language === \"si\"){\n      setTranslations([\"පළමු අනාවැකිය\", \"දෙවන අනාවැකිය\", \"තෙවන අනාවැකිය\"]);\n    }\n    else{\n      setTranslations([\"முதல் கணிப்பு\", \"இரண்டாவது கணிப்பு\", \"மூன்றாவது கணிப்பு\"]);\n    }\n  }\n\n  if(model === null) return <LoadingScreen />\n\n  else if (translations!==null && predictions !== null) return <PredictionScreen \n              originalPredictions={predictions} \n              translations={translations} \n              reset = {setPredictions}/>\n  else  if (enter) return <MainScreen imageForPreditions = {setImage} setPrediction={predict}/>\n\n  else return <HomeScreen clickEvent={setEnter}/>\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}